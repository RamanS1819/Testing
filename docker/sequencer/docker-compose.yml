services:
  sequencer:
    image: starterkit-sequencer
    build:
      dockerfile: ./docker/base/Dockerfile
      context: ../..
    container_name: starterkit-sequencer
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DATABASE_URL=${DATABASE_URL}

      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}

      - PROTOKIT_SHOULD_ATTEMPT_DB_MIGRATION=${PROTOKIT_SHOULD_ATTEMPT_DB_MIGRATION}
      - PROTOKIT_LOG_LEVEL=${PROTOKIT_LOG_LEVEL}
      - PROTOKIT_BLOCK_INTERVAL=${PROTOKIT_BLOCK_INTERVAL}
      - PROTOKIT_GRAPHQL_HOST=${PROTOKIT_GRAPHQL_HOST}
      - PROTOKIT_GRAPHQL_PORT=${PROTOKIT_GRAPHQL_PORT}
      - PROTOKIT_GRAPHIQL_ENABLED=${PROTOKIT_GRAPHIQL_ENABLED}
    profiles:
      - monolithic-sequencer
    # depends_on:
      # postgres:
      #   condition: service_healthy
      # redis:
      #   condition: service_healthy
    networks:
      - db-net
      - routing-net
      - chain-net
    ports:
      - "38080:8080"
    command: ["./packages/chain/dist/src/start.js start ./environments/${PROTOKIT_ENV_FOLDER}/chain.config.js"]
    restart: unless-stopped
    depends_on:
      - startup_scripts

  startup_scripts:
    image: starterkit-sequencer
    build:
      dockerfile: ./docker/base/Dockerfile
      context: ../..
    container_name: starterkit-startup_scripts
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - POSTGRES_PORT=${POSTGRES_PORT}
      - DATABASE_URL=${DATABASE_URL}

      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
      - REDIS_PASSWORD=${REDIS_PASSWORD}

      - PROTOKIT_SHOULD_ATTEMPT_DB_MIGRATION=${PROTOKIT_SHOULD_ATTEMPT_DB_MIGRATION}
      - PROTOKIT_LOG_LEVEL=${PROTOKIT_LOG_LEVEL}
      - PROTOKIT_BLOCK_INTERVAL=${PROTOKIT_BLOCK_INTERVAL}
      - PROTOKIT_GRAPHQL_HOST=${PROTOKIT_GRAPHQL_HOST}
      - PROTOKIT_GRAPHQL_PORT=${PROTOKIT_GRAPHQL_PORT}
      - PROTOKIT_GRAPHIQL_ENABLED=${PROTOKIT_GRAPHIQL_ENABLED}
      - NEXT_PUBLIC_PROTOKIT_GRAPHQL_URL=http://sequencer:8080/graphql
    profiles:
      - monolithic-sequencer
    # depends_on:
      # postgres:
      #   condition: service_healthy
      # redis:
      #   condition: service_healthy
    networks:
      - db-net
      - routing-net
      - chain-net
    command: ["./packages/chain/dist/on_startup_scripts/set-default-games.js"]
    restart: on-failure


networks:
  chain-net: